parameters:
    app.upload_public_path: '/uploads/avatars'
    app.uploads_directory: '%kernel.project_dir%/public/%env(UPLOADS_DIR)%'
    app.max_file_size: '%env(int:MAX_FILE_SIZE)%'
    app.frontend_url: '%env(FRONTEND_URL)%'

    # OAuth Google
    google.client_id: '%env(GOOGLE_CLIENT_ID)%'
    google.client_secret: '%env(GOOGLE_CLIENT_SECRET)%'
    google.redirect_uri: '%env(GOOGLE_REDIRECT_URI)%'

    # OAuth Facebook
    facebook.app_id: '%env(FACEBOOK_APP_ID)%'
    facebook.app_secret: '%env(FACEBOOK_APP_SECRET)%'
    facebook.redirect_uri: '%env(FACEBOOK_REDIRECT_URI)%'

    app.default_currency: '%env(DEFAULT_CURRENCY)%'
    app.exchange_rate_api_key: '%env(EXCHANGE_RATE_API_KEY)%'

    sms_verification.enabled: '%env(bool:SMS_VERIFICATION_ENABLED)%'
    email_verification_enabled: '%env(bool:EMAIL_VERIFICATION_ENABLED)%'

    app.jwt_cookie_name: '%env(JWT_COOKIE_NAME)%'
    app.jwt_cookie_domain: '%env(JWT_COOKIE_DOMAIN)%'
    app.jwt_cookie_secure: '%env(bool:JWT_COOKIE_SECURE)%'
    app.jwt_cookie_same_site: '%env(JWT_COOKIE_SAMESITE)%'
    app.jwt_ttl: '%env(int:JWT_TTL)%'
    app.refresh_token_ttl: '%env(int:REFRESH_TOKEN_TTL)%'

services:
    _defaults:
        autowire: true
        autoconfigure: true
        bind:
            # Bind global pour tous les services qui ont ce param√®tre
            $smsVerificationEnabled: '%sms_verification.enabled%'

    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # EmailService
    App\Service\EmailService:
        arguments:
            $frontendUrl: '%app.frontend_url%'

    App\Command\ImportGeoDataCommand:
        arguments:
            $projectDir: '%kernel.project_dir%'

    App\Service\AuthService:
        arguments:
            $emailVerificationEnabled: '%email_verification_enabled%'

    App\Service\CurrencyService:
        arguments:
            $exchangeRateApiKey: '%app.exchange_rate_api_key%'
            $defaultCurrency: '%app.default_currency%'

    # ==================== CONFIGURATION TWILIO ====================
    App\Service\TwilioService:
        arguments:
            $logger: '@logger'
            $twilioAccountSid: '%env(TWILIO_ACCOUNT_SID)%'
            $twilioAuthToken: '%env(TWILIO_AUTH_TOKEN)%'
            $twilioPhoneNumber: '%env(TWILIO_PHONE_NUMBER)%'

    # GoogleAuthService
    App\Service\OAuth\GoogleAuthService:
        arguments:
            $googleClientId: '%google.client_id%'
            $googleClientSecret: '%google.client_secret%'
            $googleRedirectUri: '%google.redirect_uri%'

    # FacebookAuthService
    App\Service\OAuth\FacebookAuthService:
        arguments:
            $facebookAppId: '%facebook.app_id%'
            $facebookAppSecret: '%facebook.app_secret%'
            $facebookRedirectUri: '%facebook.redirect_uri%'

    App\Service\TopicBuilder:
        arguments:
            $baseDomain: '%env(APP_BASE_DOMAIN)%'

    App\Service\MercureTokenService:
        arguments:
            $mercureSubscriberKey: '%env(resolve:MERCURE_SUBSCRIBER_JWT_KEY)%'

    App\Service\RefreshTokenManager:
        arguments:
            $refreshTokenTtl: '%app.refresh_token_ttl%'

    App\Service\AvatarService:
        arguments:
            $uploadDirectory: '%app.uploads_directory%'
            $uploadPublicPath: '%app.upload_public_path%'
            $maxFileSize: '%app.max_file_size%'

    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # JWT Cookie Authenticator
    App\Security\JWTCookieAuthenticator:
        parent: lexik_jwt_authentication.security.jwt_authenticator

    # JWT Event Listener
    App\EventListener\JWTListener:
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccess }
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_created, method: onJWTCreated }
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_failure, method: onAuthenticationFailure }

    # Configuration de l'ExceptionListener
    App\EventListener\ExceptionListener:
        arguments:
            $environment: '%kernel.environment%'
        tags:
            - { name: kernel.event_listener, event: kernel.exception, priority: 10 }

    App\EventListener\BannedUserListener:
        tags:
        - { name: kernel.event_listener, event: kernel.request, priority: 10 }
